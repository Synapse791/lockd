{"version":3,"sources":["00-quest.js","passwords.js","search.js","app.js"],"names":[],"mappingshJA;AACA;AACA;AACA;AACA;AACA;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"dashboard.min.js","sourcesContent":["class $q\n{\n    static get(url, data) {\n        return $q.request('GET', url, data);\n    }\n\n    static put(url, data) {\n        return $q.request('PUT', url, data);\n    }\n\n    static post(url, data) {\n        return $q.request('POST', url, data);\n    }\n\n    static patch(url, data) {\n        return $q.request('PATCH', url, data);\n    }\n\n    static delete(url, data) {\n        return $q.request('DELETE', url, data);\n    }\n\n    static request(method, url, data) {\n        return jQuery.ajax({\n                method: method,\n                url: url,\n                data: data,\n                dataType: 'json'\n            })\n            .fail(response => {\n                if (typeof response.responseJSON !== 'undefined') {\n                    let msg = typeof response.responseJSON.errorDescription === 'object'\n                        ? response.responseJSON.errorDescription.join('<br>')\n                        : response.responseJSON.errorDescription;\n\n                    if (response.status === 400)\n                        toastr.warning(msg, response.responseJSON.error.toUpperCase());\n                    else\n                        toastr.error(msg, response.responseJSON.error.toUpperCase());\n                } else\n                    toastr.error(`Received a non-JSON ${response.status} response from the server.`, 'Something went wrong!');\n            });\n    }\n}","let Passwords = Vue.extend({\n    template: `<section class=\"password screen\">\n                    <article class=\"ui message\">\n                        <div class=\"ui big breadcrumb\">\n                            <a class=\"section\" v-on:click=\"openBreadcrumbFolder('root')\">Root</a>\n                            <span v-for=\"folder in breadcrumb\">\n                                <i class=\"right chevron icon divider\"></i>\n                                <a class=\"section\" v-on:click=\"openBreadcrumbFolder(folder)\">{{ folder.name }}</a>\n                            </span>\n                        </div>\n                    </article>\n                    <div class=\"ui grid\">\n                        <div class=\"three wide computer eight wide tablet column\" v-for=\"folder in folders\">\n                            <div class=\"ui fluid link card\" v-on:click=\"openFolder(folder)\">\n                                <div class=\"image\">\n                                    <img src=\"/images/folder.png\" alt=\"Folder\">\n                                </div>\n                                <div class=\"center aligned content\">\n                                    <div class=\"header\">{{ folder.name }}</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"three wide computer eight wide tablet column\" v-for=\"password in passwords\">\n                            <div class=\"ui fluid card\">\n                                <div class=\"content\">\n                                    <div class=\"header\">{{ password.name }}</div>\n                                    <hr>\n                                    <table class=\"ui table\">\n                                        <tbody>\n                                        <tr>\n                                            <td><strong>URL</strong></td>\n                                            <td><a href=\"{{ password.url || '' }}\">{{ password.url || 'none' }}</a></td>\n                                        </tr>\n                                        <tr>\n                                            <td><strong>User</strong></td>\n                                            <td>{{ password.user || 'none' }}</td>\n                                        </tr>\n                                        <tr>\n                                            <td><strong>Password</strong></td>\n                                            <td><span id=\"password_{{ password.id }}\">&ast;&ast;&ast;&ast;&ast;&ast;</span></td>\n                                        </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n                                <div class=\"ui two bottom attached buttons\">\n                                    <button class=\"ui blue labeled icon button\" v-on:click=\"showPassword(password.id)\">\n                                        <i class=\"search icon\"></i>\n                                        Show Password\n                                    </button>\n                                    <button class=\"ui primary labeled icon button\" v-on:click=\"copyPassword(password.id)\">\n                                        <i class=\"copy icon\"></i>\n                                        Copy Password\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div id=\"password_copy_container\">\n                        <button id=\"copy_trigger\" data-clipboard-text=\"{{ hiddenPassword }}\"></button>\n                    </div>\n    `,\n\n    data() {\n        return {\n            hiddenPassword: '',\n            breadcrumb: [],\n            folders: [],\n            passwords: []\n        }\n    },\n\n    ready() {\n        this.loadContents(1);\n        setTimeout(() => new Clipboard('#copy_trigger'), 500);\n    },\n\n    methods: {\n\n        openFolder(folder) {\n            this.loadContents(folder.id);\n            this.breadcrumb.push(folder);\n        },\n\n        openBreadcrumbFolder(folder) {\n            if (folder === 'root') {\n                this.breadcrumb = [];\n                this.loadContents(1);\n            } else {\n                if (this.breadcrumb[this.breadcrumb.length - 1] != folder) {\n                    let position = this.breadcrumb.indexOf(folder);\n                    this.breadcrumb.splice(position + 1);\n                }\n                this.loadContents(folder.id);\n            }\n        },\n\n        loadContents(folderId) {\n            this.loadFolders(folderId);\n            this.loadPasswords(folderId);\n        },\n\n        loadFolders(folderId) {\n            this.folders = [];\n            $q.get(`/api/folder/${folderId}/folders`)\n                .success(({data}) => {\n                    this.folders = data;\n                });\n        },\n\n        loadPasswords(folderId) {\n            this.passwords = [];\n            $q.get(`/api/folder/${folderId}/passwords`)\n                .success(({data}) => {\n                    this.passwords = data;\n                });\n        },\n\n        showPassword(id) {\n            let el = $(`#password_${id}`);\n            let password = '';\n            this.passwords.forEach((item) => {\n                if (item.id == id)\n                    password = item.password;\n            });\n\n            el.html(atob(password));\n\n            setTimeout(() => {el.html('&ast;&ast;&ast;&ast;&ast;&ast;')}, 3000);\n        },\n\n        copyPassword(id) {\n            let password = '';\n            this.passwords.forEach((item) => {\n                if (item.id == id)\n                    password = item.password;\n            });\n\n            this.hiddenPassword = atob(password);\n            setTimeout(() => {$('#copy_trigger').click()}, 50);\n            toastr.info('Copied password to clipboard');\n            setTimeout(() => {this.hiddenPassword = ''}, 100);\n\n        }\n    }\n});","let Search = Vue.extend({\n    template: `\n        <div class=\"ui big fluid input\">\n            <input type=\"text\" placeholder=\"Search...\">\n        </div>`\n});","let App = Vue.extend({});\n\nlet router = new VueRouter();\n\nrouter.map({\n    '/passwords': {\n        component: Passwords\n    },\n    '/search': {\n        component: Search\n    }\n});\n\nrouter.start(App, '#dashboardPage');"],"sourceRoot":"/source/"}